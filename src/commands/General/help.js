const CommandPattern = require("../../models/Command.js");
const fs = require("fs");
const { MessageEmbed } = require("discord.js");

const commandParams = {
    
    name: "help",
    aliases: [
        "h"
    ],
    desc: "Affiche l'aide du bot",
    enabled: true,
    dm: true,
    nsfw: false,
    memberPermission: [],
    botPermission: [],
    owner: false,
    cooldown: null

}

const fields = [

    {
        title: "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ  Liste des commandes  ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ",
        content: ""
    },
    {
        title: "‚ûñ‚ûñ‚ûñ  Bienvenue dans l'Interface d'Aide  ‚ûñ‚ûñ‚ûñ",
        content: "__**Stockbot, c'est quoi ?**__\nStockBot est un bot sp√©cialis√© dans la **stockage** et l'**indexation de liens**, pour permettre une **dynamique de partage** de contenu assez vaste dans la communaut√© fran√ßaise de Discord. C'est ainsi **plusieurs milliers de fichiers** qui sont index√©s et accessibles via une interface, on l'esp√®re, assez claire et efficace.\n\n__**Comment √ßa marche ?**__\nIl vous suffit d'entrer la commande `PREFIXs` pour acceder √† la partie la plus importante du bot ; l'interface de stockage ou **Stockage Core**. Cette derni√®re est expliqu√©e en d√©tails √† la page 3.\n\n__**Un bot, mais surtout une communaut√©**__\nCe bot n'a pas pour vocation d'√™tre fig√© dans le temps en se reposant sur ses acquis et en ne faisant pas evoluer sa base de donn√©e. C'est pourquoi nous vous incitons √† partager un maximum de liens via la commande `PREFIXsubmit` pour en faire profiter des centaines d'autres utilisateurs !"
    },
    {
        title: "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ   Stockage Core   ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ",
        content: "Le **Stockage Core** est le tronc principal du Bot. Il vous permet d'acc√©der √† tout le syst√®me de stockage. La naviguation dans cette interface √† √©t√© imagin√©e de telle sorte qu'apr√®s avoir entr√© la commande `PREFIXstockage` (ou `PREFIXs`), vous ayez tout un menu de r√©actions sur lesquelles cliquer.\n\nPetite information additionnelle : vous pouvez chercher une page de mani√®re tr√®s rapide en marquant votre recherche a la suite de la commande (ex: `PREFIXs one piece`).\nNotez cependant que ce syst√®me n'est qu'un raccourcis et le bot vous affichera la premi√®re page qu'il aura trouv√© en faisant la recherche. Si vous voulez avoir une liste des r√©sultats et pouvoir choisir quelle page acc√©der il vous faudra utiliser le syst√®me de recherche normal (par exemple ici en marquant `one piece` on tombera automatiquement sur la page de l'anime, et non celle du manga (√©tant donn√© que les anime sont situ√©s avant les manga dans la file de recherche)\n\n__**Arborescence  :**__\n\n`PREFIXstockage` (ou `PREFIXs`)\n‚ï†‚ïê>" + " `cat√©gories` (ou `c`) | Acc√®de √† l'entiert√© du contenu index√© par le bot.\n‚ï†‚ïê> `search` (ou `se`) | Cherche une page via un ou plusieurs mots-cl√©s\n‚ïö‚ïê> `serveur` (ou `s`) | Acc√®de au stockage personnalis√© de ton serveur.\n\nD'autres informations utiles seront √©galement affich√©es tel que :\n‚Ä¢ La page la plus visit√©e\n‚Ä¢ La derni√®re page index√©e\n‚Ä¢ Les informations techniques du bot\n\n__**Classification**__\nLes liens index√©s sont affich√©s sous forme de **pages** avec des informations compl√©mentaires en fonction du type du lien (Anime, Film, Musique, etc). Cette classification permet de trouver rapidement un lien cherch√©.\n\n__**Votes**__\nUn syst√®me de vote est pr√©sent sur chaque page ce qui vous permet, comme le font d'autres platformes tel que netflix, de donner votre avis sur cette page via deux votes d'une simplicit√© d√©routante : " + `"j'aime"/"j'aime pas". Le nombre de votes est affich√© en haut de chaque pages. Finalement, la page la mieux not√©e est affich√©e aux c√¥t√©s de la page la plus visit√©e dans le **Stockage Core**.\n\n__**Listes (Planning/Completed)**__\nEn plus des votes, vous pourrez enregistrer chaque page soit dans les "Plannings" (= √† voir) soit dans les "Completed" (= vu) via le petit menu qui s'affiche en cliquant sur les 3 petits points. Vous pourrez ensuite voir les stats tel que le temp de total pass√© a regarder des animes, le nombre total vu, etc √† partir du profil (/!\ Ces deux options ne sont pas disponibles pour les jeux et la musique /!\). Vous pouvez aussi via ce menu afficher les stats de la page (nb de visites, plannings et completed) et envoyer le(s) lien(s) directement en mp !`
    },
    {
        title: "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ   Interactions   ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ",
        content: "Il existe **4** commandes qui permettent une interaction directe avec le staff et les developpeurs :\n\n__**ASK** (`PREFIXask`)__\nEnvoie une demande d'ajout d'un anime, musique, film, etc sur le bot.\n\n__**ASKLIST** (`PREFIXasklist`)__\nAffiche la liste de toutes les demandes en cours sur le bot.\n\n__**REPORT** (`PREFIXreport`)__\nPermet d'informer le staff de probl√®mes sur le bot. Cela peut-√™tre un **lien mort**, une **erreur d'indexation**, un **bug** ou encore une simple **remarque/critique**.\n\n__**SUGGEST** (`PREFIXsuggest`)__\nEnvoie une suggestion pour le bot directement aux developpeurs."
    },
    {
        title: "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ   Nature des Liens   ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ",
        content: "La pluspart des liens index√©s sur le bot sont des fichiers h√©berg√©s sur la platforme [MEGA](https://mega.nz). Cette derni√®re vous permettra plusieurs actions √† partir des liens :\n\n__**T√©l√©charger**__\nRaison principale de cet hebergement : vous offrir le choix du t√©l√©chargement simple et s√©curis√©. Tous les liens partag√©s sont v√©rifi√©s et s√ªrs √† 99,9% (le risque 0 n'existe pas :/ ). Que ce soit sur smartphone ou sur ordinateur, vous pouvez t√©l√©charger les fichiers tels quel ou compress√©s sous format `.zip` (fortement conseill√© pour les **mangas** et la **musique**).\n\n__**Streamer**__\nVous n'√™tes pas oblig√©s de t√©l√©charger et au contraire simplement lire le contenu souhait√© directement depuis la platforme. Enfin ce n'est pas tout √† fait vrai tout le temps. En effet certains formats ne sont pas lisibles en ligne et il vous faudra donc forc√©ment les t√©l√©charger. Voici une petite liste :\n`‚úÖ` => lisible partout | `‚ùå` => non lisible en ligne | `üì±` => lisible seulement sur smartphone\n**Formats vid√©os :** `mp4 (‚úÖ) | mkv (üì±) | avi (‚ùå)`\n**Formats images (mangas) :** `tous formats (‚úÖ)`\n**Formats musiques :** `tous format (‚úÖ)`\nVoil√† une vue d'ensemble pour vous aider √† vous y retrouver.\n\n**/!\\ Pour lire le format MKV sur Mac, il vous faudra utiliser VLC /!\\**\n\nPS : Petite astuce pour les mangas -> il peut √™tre tr√®s interessant et pratique de lire directement depuis la platforme puisqu'elle dispose d'une visionneuse d'image tout √† fait correcte. De plus, si vous souhaitez lire dans le sens classique d'un manga, il vous suffit de trier par ordre d√©croissant ;).\n\n__**Copier**__\nMega propose une fonctionnalit√© plut√¥t interessante : l'importation. En effet si vous disposez d'un compte, vous pouvez instantan√©ment importer le contenu de liens externes dans votre cloud √† vous (qui est de 50 Go pour rappel) ce qui vous permet de sauvegarder les contenus importantss et pouvoir y acceder tr√®s simplement (l'importation est absolument instantan√©e, il n'y a pas de t√©l√©chargement ou autre)."
    },
]

module.exports = class extends CommandPattern {

    constructor () {
        super(commandParams)
    }

    async run (msg, args, cmd, color) {

        let prefix = db.guild.get(`guilds.${msg.guild.id}.prefix`).value(),
            page = 1,
            filter = (reaction, user) => user.id === msg.author.id && ["‚óÄ", "‚ñ∂"].includes(reaction.emoji.name);

        let m = await msg.channel.send(this.getEmbed(msg, color, prefix, page));
        await m.react("‚óÄ"); await m.react("‚ñ∂");

        let reac = await m.createReactionCollector(filter, {time: 1000*60*5});

        reac.on("collect", async(reaction) => {

            reaction.users.remove(msg.author.id);

            if (reaction.emoji.name === "‚óÄ") page = page === 1 ? fields.length : page - 1;
            else page = page === fields.length ? 1 : page + 1;

            await m.edit(this.getEmbed(msg, color, prefix, page));
        })

    }

    getEmbed (msg, color, prefix, page) {


        let embed = new MessageEmbed()
        .setTitle(fields[page-1].title)
        .setColor(color)
        .setAuthor(msg.author.username, msg.author.displayAvatarURL({dynamic: true}))
        .setFooter(page + "/" + fields.length)
        //.setThumbnail("https://upload.wikimedia.org/wikipedia/commons/a/a4/Cute-Ball-Help-icon.png")

        if (page == 1) {

            let categories = fs.readdirSync(`./src/commands`).filter(file => !file.includes("."))

            categories.forEach(category => {
                let content = fs.readdirSync(`./src/commands/${category}`).filter(file => file.endsWith(".js") && !file.startsWith("_")).map(
                    commandName => {
                        let command = bot.commands.get(commandName.split(".")[0])
                        return command.verification.enabled == true && command.permission.owner == false ? `\`${prefix}${commandName.split(".")[0]}\`${command.info.aliases.filter(val => !val.startsWith("_")).length > 0 ? ` (ou ${command.info.aliases.filter(val => !val.startsWith("_")).map(val => `\`${prefix}${val}\``).join(" | ")})`:""} | ${this.checkCommand(command)} ${command["info"]["desc"]}\n` : ""
                    } 
                ).join("");
                if (content.length > 0) embed.addField(category === "Stockage" ? "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"+ category : category, content + (category === "Stockage" ? "*C'est la commande m√®re du bot et ce pourquoi il a √©t√© cr√©√© (elle est d√©taill√©e √† la page 3)*\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨" : ""));
            });

        } else {
            
            let content = fields[page-1].content.split("PREFIX").join(prefix);
            
            if (content.length > 1900) {
                let splittedContent = content.split("\n\n");
                embed.addField("\u200b", splittedContent.slice(0, Math.floor(splittedContent.length/3)).join("\n\n"));
                embed.addField("\u200b", splittedContent.slice(Math.floor(splittedContent.length/3), Math.floor(splittedContent.length*(2/3))+1).join("\n\n"));
                embed.addField("\u200b", splittedContent.slice(Math.floor(splittedContent.length*(2/3))+1, splittedContent.length).join("\n\n"));
            }
            else embed.setDescription(content);

        }

        return embed;


    }

    checkCommand (command) {
        let text = ""
        if (command.verification.nsfw == true) text+="[**NSFW**] "
        if (command.permission.memberPermission.includes("ADMINISTRATOR")) text+="[**ADMIN**] "
        if (command.info.cooldown !== null) text+=`[**${command.info.cooldown}** sec] `
        return text
    }

}